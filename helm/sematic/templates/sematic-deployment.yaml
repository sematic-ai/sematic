apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  generation: 1
  labels:
    application: runner
  name: sematic-generic
  namespace: {{ .Values.namespace }}
spec:
  progressDeadlineSeconds: 600
  replicas: {{ .Values.server.resources.replicas }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: sematic
      app.kubernetes.io/name: generic
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: sematic
        app.kubernetes.io/name: generic
    spec:
      containers:
      - env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: DATABASE_URL
              optional: false
        envFrom:
        - configMapRef:
            name: sematic-configs
        image: {{ .Values.server.image }}
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        name: main
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: {{ .Values.server.resources.cpu }}
            memory: {{ .Values.server.resources.memory }}
          requests:
            cpu: {{ .Values.server.resources.cpu }}
            memory: {{ .Values.server.resources.memory }}
        securityContext: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: sematic-sa
      serviceAccountName: sematic-sa
      terminationGracePeriodSeconds: 30
